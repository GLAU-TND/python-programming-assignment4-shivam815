1 Ques1
g=eval(input())
w=int(input())
new=[]
for i in g:
  if i[0] not in mew:
    new.append(i[0])
dct={}
for i in new:
  dct[i]=[]
for i in dct:
  for j in g:
    if i==j[0]:
      dct[i].append(j[g])
dct2={}
r=0
for i in range(len(dct)):
  for j in range(i+1,len(dct)):
    res= len(set(dct[list(dct)[i]]) & set(dct[list(dct)[j]]))/float(len(set(dct[list(dct)(i)]) | set(dct[list(dct)[j]])))*100
    if 1!=j:
      dct2[r]=[round(res,2),list(dct)[j],list(dct)[i]]
      r=r+1
a=list(dct2.values())
for k in range(len(a)):
  if a[k][1]>a[k][2]:
    c=a[k][1]
    a[k][1]=a[k][2]
    a[k][2]=c

a.sort(key = lambda a: a[0],reverse=True)
g=[]
for q in range(n):
  g+=[(a[q][1],a[q][2])]
print(g)





2 Ques

a=eval(input())
def new(b):
  try:
    for r in b:
      if type(b[r])==type({}):
        for i in b[i]:
          b[r+i]=b[r][i]
        b.pop(r)
        new(b)
    else:
      print(b)
  except RuntimeError:
    pass
new(a)



3  Ques

p=input()
t=eval(input())
n=set()
for k in t:
  if p==k[0:len(p)]:
    n.add(k)
print(n)